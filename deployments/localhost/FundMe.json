{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x08b41537412ca0efe2f6a768a1788aa22c5292db2481caedf0559dfde0459fb1",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "913310",
        "logsBloom": "0x
        "blockHash": "0x2b10ab3d6fae6d142eea5046ee7eb83bbfeaaa6e25f998d2c6aec4e56d3bac52",
        "transactionHash": "0x08b41537412ca0efe2f6a768a1788aa22c5292db2481caedf0559dfde0459fb1",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "913310",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "148f303bd2034373a1ffd4ad120b7db8",
    "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Tiago Tavares\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/**@title A contract for crowd funding\\n * @author Tiago Tavares\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xe39704a4c3755f6236d96bdd4988cc78c3b53d6666f3d875f138258a320e7876\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x202ed66f8ba9546e952c30a52f46338b4422afee5c16fb963a672d0fbcdcd9b0\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a060405234801561001057600080fd5b50604051620010863803806200108683398181016040528101906100349190610112565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100df826100b4565b9050919050565b6100ef816100d4565b81146100fa57600080fd5b50565b60008151905061010c816100e6565b92915050565b600060208284031215610128576101276100af565b5b6000610136848285016100fd565b91505092915050565b608051610f24620001626000396000818161032d01526105e00152610f246000f3fe6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e81461010c5780639e87a5cd14610137578063b60d428814610162578063d7b4750c1461016c57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061085c565b6102e3565b6040516100c191906108a2565b60405180910390f35b3480156100d657600080fd5b506100df61032b565b005b3480156100ed57600080fd5b506100f66105cf565b60405161010391906108a2565b60405180910390f35b34801561011857600080fd5b506101216105dc565b60405161012e91906108cc565b60405180910390f35b34801561014357600080fd5b5061014c610604565b6040516101599190610946565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061098d565b61062e565b6040516101a091906108cc565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067690919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610a17565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a66565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561043457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ea575b5050505050905060005b81518110156104be57600082828151811061045c5761045b610abc565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b690610aeb565b91505061043e565b50600067ffffffffffffffff8111156104da576104d9610b34565b5b6040519080825280602002602001820160405280156105085781602001602082028036833780820191505090505b506001908051906020019061051e929190610752565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054590610b94565b60006040518083038185875af1925050503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b50509050806105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610bf5565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061064457610643610abc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610682836106b2565b90506000670de0b6b3a7640000858361069b9190610c15565b6106a59190610c9e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190610d5c565b5050509150506402540be4008161074a9190610dd7565b915050919050565b8280548282559060005260206000209081019282156107cb579160200282015b828111156107ca5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610772565b5b5090506107d891906107dc565b5090565b5b808211156107f55760008160009055506001016107dd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610829826107fe565b9050919050565b6108398161081e565b811461084457600080fd5b50565b60008135905061085681610830565b92915050565b600060208284031215610872576108716107f9565b5b600061088084828501610847565b91505092915050565b6000819050919050565b61089c81610889565b82525050565b60006020820190506108b76000830184610893565b92915050565b6108c68161081e565b82525050565b60006020820190506108e160008301846108bd565b92915050565b6000819050919050565b600061090c610907610902846107fe565b6108e7565b6107fe565b9050919050565b600061091e826108f1565b9050919050565b600061093082610913565b9050919050565b61094081610925565b82525050565b600060208201905061095b6000830184610937565b92915050565b61096a81610889565b811461097557600080fd5b50565b60008135905061098781610961565b92915050565b6000602082840312156109a3576109a26107f9565b5b60006109b184828501610978565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a01601b836109ba565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7182610889565b9150610a7c83610889565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ab157610ab0610a37565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610af682610889565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b2957610b28610a37565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b7e600083610b63565b9150610b8982610b6e565b600082019050919050565b6000610b9f82610b71565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bdf600b836109ba565b9150610bea82610ba9565b602082019050919050565b60006020820190508181036000830152610c0e81610bd2565b9050919050565b6000610c2082610889565b9150610c2b83610889565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6457610c63610a37565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ca982610889565b9150610cb483610889565b925082610cc457610cc3610c6f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cee81610ccf565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b6000819050919050565b610d2481610d11565b8114610d2f57600080fd5b50565b600081519050610d4181610d1b565b92915050565b600081519050610d5681610961565b92915050565b600080600080600060a08688031215610d7857610d776107f9565b5b6000610d8688828901610cfc565b9550506020610d9788828901610d32565b9450506040610da888828901610d47565b9350506060610db988828901610d47565b9250506080610dca88828901610cfc565b9150509295509295909350565b6000610de282610d11565b9150610ded83610d11565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e2c57610e2b610a37565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e6957610e68610a37565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ea657610ea5610a37565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ee357610ee2610a37565b5b82820290509291505056fea2646970667358221220ad5d6dfec37285b92b03353a692da259d6f42058f016d5e831fc03f8517327ef64736f6c63430008090033",
    "deployedBytecode": "0x6080604052600436106100745760003560e01c8063893d20e81161004e578063893d20e81461010c5780639e87a5cd14610137578063b60d428814610162578063d7b4750c1461016c57610083565b80630343fb251461008d5780633ccfd60b146100ca5780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100b460048036038101906100af919061085c565b6102e3565b6040516100c191906108a2565b60405180910390f35b3480156100d657600080fd5b506100df61032b565b005b3480156100ed57600080fd5b506100f66105cf565b60405161010391906108a2565b60405180910390f35b34801561011857600080fd5b506101216105dc565b60405161012e91906108cc565b60405180910390f35b34801561014357600080fd5b5061014c610604565b6040516101599190610946565b60405180910390f35b61016a6101a9565b005b34801561017857600080fd5b50610193600480360381019061018e919061098d565b61062e565b6040516101a091906108cc565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461067690919063ffffffff16565b1015610229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022090610a17565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102779190610a66565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561043457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116103ea575b5050505050905060005b81518110156104be57600082828151811061045c5761045b610abc565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b690610aeb565b91505061043e565b50600067ffffffffffffffff8111156104da576104d9610b34565b5b6040519080825280602002602001820160405280156105085781602001602082028036833780820191505090505b506001908051906020019061051e929190610752565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054590610b94565b60006040518083038185875af1925050503d8060008114610582576040519150601f19603f3d011682016040523d82523d6000602084013e610587565b606091505b50509050806105cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c290610bf5565b60405180910390fd5b5050565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006001828154811061064457610643610abc565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610682836106b2565b90506000670de0b6b3a7640000858361069b9190610c15565b6106a59190610c9e565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106fb57600080fd5b505afa15801561070f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107339190610d5c565b5050509150506402540be4008161074a9190610dd7565b915050919050565b8280548282559060005260206000209081019282156107cb579160200282015b828111156107ca5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610772565b5b5090506107d891906107dc565b5090565b5b808211156107f55760008160009055506001016107dd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610829826107fe565b9050919050565b6108398161081e565b811461084457600080fd5b50565b60008135905061085681610830565b92915050565b600060208284031215610872576108716107f9565b5b600061088084828501610847565b91505092915050565b6000819050919050565b61089c81610889565b82525050565b60006020820190506108b76000830184610893565b92915050565b6108c68161081e565b82525050565b60006020820190506108e160008301846108bd565b92915050565b6000819050919050565b600061090c610907610902846107fe565b6108e7565b6107fe565b9050919050565b600061091e826108f1565b9050919050565b600061093082610913565b9050919050565b61094081610925565b82525050565b600060208201905061095b6000830184610937565b92915050565b61096a81610889565b811461097557600080fd5b50565b60008135905061098781610961565b92915050565b6000602082840312156109a3576109a26107f9565b5b60006109b184828501610978565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610a01601b836109ba565b9150610a0c826109cb565b602082019050919050565b60006020820190508181036000830152610a30816109f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a7182610889565b9150610a7c83610889565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610ab157610ab0610a37565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610af682610889565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b2957610b28610a37565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610b7e600083610b63565b9150610b8982610b6e565b600082019050919050565b6000610b9f82610b71565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610bdf600b836109ba565b9150610bea82610ba9565b602082019050919050565b60006020820190508181036000830152610c0e81610bd2565b9050919050565b6000610c2082610889565b9150610c2b83610889565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c6457610c63610a37565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ca982610889565b9150610cb483610889565b925082610cc457610cc3610c6f565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610cee81610ccf565b8114610cf957600080fd5b50565b600081519050610d0b81610ce5565b92915050565b6000819050919050565b610d2481610d11565b8114610d2f57600080fd5b50565b600081519050610d4181610d1b565b92915050565b600081519050610d5681610961565b92915050565b600080600080600060a08688031215610d7857610d776107f9565b5b6000610d8688828901610cfc565b9550506020610d9788828901610d32565b9450506040610da888828901610d47565b9350506060610db988828901610d47565b9250506080610dca88828901610cfc565b9150509295509295909350565b6000610de282610d11565b9150610ded83610d11565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610e2c57610e2b610a37565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e6957610e68610a37565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610ea657610ea5610a37565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610ee357610ee2610a37565b5b82820290509291505056fea2646970667358221220ad5d6dfec37285b92b03353a692da259d6f42058f016d5e831fc03f8517327ef64736f6c63430008090033",
    "devdoc": {
        "author": "Tiago Tavares",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "implements price feeds as our library"
            }
        },
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo a sample funding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 59,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 62,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 74,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
